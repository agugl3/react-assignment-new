{"ast":null,"code":"import { put, takeLatest, all } from 'redux-saga/effects';\n\nfunction* fetchList(action) {\n  let payload = {};\n\n  if (action && action.payload) {\n    payload = action.payload;\n  }\n\n  var params = Object.keys(payload).filter(function (key) {\n    return payload[key] ? true : false;\n  }).map(function (key) {\n    return encodeURIComponent(key) + '=' + encodeURIComponent(payload[key]);\n  }).join('&');\n  const data = yield fetch('https://rickandmortyapi.com/api/character/?' + params, {\n    method: 'GET'\n  }).then(response => response.json());\n  yield put({\n    type: \"LIST_RECEIVED\",\n    jsonObj: data || [{\n      error: json.message\n    }]\n  });\n}\n\nfunction* actionWatcher() {\n  yield takeLatest('GET_LIST', fetchList);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["C:/Users/guglani lalit/Documents/react-assignment/components/organisms/Game/Game.saga.js"],"names":["put","takeLatest","all","fetchList","action","payload","params","Object","keys","filter","key","map","encodeURIComponent","join","data","fetch","method","then","response","json","type","jsonObj","error","message","actionWatcher","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;;AAEA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AACxB,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,MAAM,IAAIA,MAAM,CAACC,OAArB,EAA8B;AAC1BA,IAAAA,OAAO,GAAGD,MAAM,CAACC,OAAjB;AACH;;AAED,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYH,OAAZ,EACRI,MADQ,CACD,UAAUC,GAAV,EAAe;AACnB,WAAOL,OAAO,CAACK,GAAD,CAAP,GAAe,IAAf,GAAsB,KAA7B;AACH,GAHQ,EAIRC,GAJQ,CAIJ,UAAUD,GAAV,EAAe;AAChB,WAAOE,kBAAkB,CAACF,GAAD,CAAlB,GAA0B,GAA1B,GAAgCE,kBAAkB,CAACP,OAAO,CAACK,GAAD,CAAR,CAAzD;AACH,GANQ,EAORG,IAPQ,CAOH,GAPG,CAAb;AAUA,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,gDAAgDT,MAAjD,EAAyD;AAAEU,IAAAA,MAAM,EAAE;AAAV,GAAzD,CAAL,CACdC,IADc,CACTC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADH,CAAnB;AAGA,QAAMnB,GAAG,CAAC;AAAEoB,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEP,IAAI,IAAI,CAAC;AAAEQ,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAAd,KAAD;AAA1C,GAAD,CAAT;AACH;;AAED,UAAUC,aAAV,GAA0B;AACtB,QAAMvB,UAAU,CAAC,UAAD,EAAaE,SAAb,CAAhB;AACH;;AAGD,eAAe,UAAUsB,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNsB,aAAa,EADP,CAAD,CAAT;AAGH","sourcesContent":["import { put, takeLatest, all } from 'redux-saga/effects';\r\n\r\nfunction* fetchList(action) {\r\n    let payload = {};\r\n    if (action && action.payload) {\r\n        payload = action.payload;\r\n    }\r\n\r\n    var params = Object.keys(payload)\r\n        .filter(function (key) {\r\n            return payload[key] ? true : false\r\n        })\r\n        .map(function (key) {\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(payload[key])\r\n        })\r\n        .join('&');\r\n\r\n\r\n    const data = yield fetch('https://rickandmortyapi.com/api/character/?' + params, { method: 'GET' })\r\n        .then(response => response.json());\r\n\r\n    yield put({ type: \"LIST_RECEIVED\", jsonObj: data || [{ error: json.message }] });\r\n}\r\n\r\nfunction* actionWatcher() {\r\n    yield takeLatest('GET_LIST', fetchList)\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        actionWatcher(),\r\n    ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}