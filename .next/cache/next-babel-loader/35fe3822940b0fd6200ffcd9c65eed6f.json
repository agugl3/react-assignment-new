{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guglani lalit\\\\Documents\\\\react-assignment\\\\components\\\\molecules\\\\ResultSet\\\\ResultSet.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nlet ResultSet = ({\n  list,\n  sortValue\n}) => {\n  let listArr = [];\n  const sortVal = sortValue;\n\n  if (list && list.results) {\n    listArr = [...list.results];\n\n    if (sortVal === \"Descending\") {\n      // console.log(\"Name deces\", list.results);  \n      listArr = listArr.sort(function (ele1, ele2) {\n        return ele2.id - ele1.id;\n      });\n    } // console.log(\"Name\", list.results);\n\n  } //console.log(\"sort\", sortValue);\n\n\n  return listArr.length ? listArr.map(({\n    id,\n    image,\n    name,\n    status,\n    species,\n    gender,\n    origin,\n    location\n  }) => __jsx(\"div\", {\n    className: \"col-md-4 col-3 tile\",\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"tile-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"id: \", id, \" - created 2 years ago\"))), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"left-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"STATUS\"), __jsx(\"span\", {\n    className: \"right-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, status)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"left-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Species\"), __jsx(\"span\", {\n    className: \"right-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, species)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"left-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Gender\"), __jsx(\"span\", {\n    className: \"right-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, gender)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"left-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Origin\"), __jsx(\"span\", {\n    className: \"right-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, origin.name)), __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    className: \"left-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Last loaction\"), __jsx(\"span\", {\n    className: \"right-ele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, location.name)))))) : __jsx(\"div\", {\n    className: \"no-results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, \"No results Found...\");\n};\n\nexport default ResultSet;","map":{"version":3,"sources":["C:/Users/guglani lalit/Documents/react-assignment/components/molecules/ResultSet/ResultSet.js"],"names":["React","connect","ResultSet","list","sortValue","listArr","sortVal","results","sort","ele1","ele2","id","length","map","image","name","status","species","gender","origin","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nlet ResultSet = ({ list, sortValue }) => {\n  let listArr = [];\n  const sortVal = sortValue;\n  if (list && list.results) {\n    listArr = [...list.results];\n    if (sortVal === \"Descending\") {\n      // console.log(\"Name deces\", list.results);  \n      listArr = listArr.sort(function (ele1, ele2) { return ele2.id - ele1.id; });\n    }\n    // console.log(\"Name\", list.results);\n  }\n  //console.log(\"sort\", sortValue);\n\n  return listArr.length ? (\n    listArr.map(({ id, image, name, status, species, gender, origin, location }) => (\n      <div className=\"col-md-4 col-3 tile\" key={id}>\n        <div className=\"tile-inner\">\n          <figure>\n            <img src={image} />\n            <div className=\"top-text\">\n              <h4>{name}</h4>\n              <p>id: {id} - created 2 years ago</p>\n            </div>\n          </figure>\n\n          <ul>\n            <li>\n              <span className=\"left-ele\">STATUS</span>\n              <span className=\"right-ele\">{status}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Species</span>\n              <span className=\"right-ele\">{species}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Gender</span>\n              <span className=\"right-ele\">{gender}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Origin</span>\n              <span className=\"right-ele\">{origin.name}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Last loaction</span>\n              <span className=\"right-ele\">{location.name}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    ))\n\n  ) : (<div className=\"no-results\">\n    No results Found...\n  </div>);\n}\n\nexport default ResultSet;\n"]},"metadata":{},"sourceType":"module"}