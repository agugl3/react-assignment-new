{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\guglani lalit\\\\Documents\\\\react-assignment\\\\components\\\\molecules\\\\ResultSet\\\\ResultSet.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar ResultSet = function ResultSet(_ref) {\n  var list = _ref.list,\n      sortValue = _ref.sortValue;\n  var listArr = [];\n  var sortVal = sortValue;\n\n  if (list && list.results) {\n    listArr = _toConsumableArray(list.results);\n\n    if (sortVal === \"Descending\") {\n      // console.log(\"Name deces\", list.results);  \n      listArr = listArr.sort(function (ele1, ele2) {\n        return ele2.id - ele1.id;\n      });\n    } // console.log(\"Name\", list.results);\n\n  } //console.log(\"sort\", sortValue);\n\n\n  return listArr.length ? listArr.map(function (_ref2) {\n    var id = _ref2.id,\n        image = _ref2.image,\n        name = _ref2.name,\n        status = _ref2.status,\n        species = _ref2.species,\n        gender = _ref2.gender,\n        origin = _ref2.origin,\n        location = _ref2.location;\n    return __jsx(\"div\", {\n      className: \"col-md-4 col-3 tile\",\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"tile-inner\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, __jsx(\"figure\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"top-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, \"id: \", id, \" - created 2 years ago\"))), __jsx(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"left-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"STATUS\"), __jsx(\"span\", {\n      className: \"right-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, status)), __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"left-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \"Species\"), __jsx(\"span\", {\n      className: \"right-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, species)), __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"left-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \"Gender\"), __jsx(\"span\", {\n      className: \"right-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, gender)), __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"left-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Origin\"), __jsx(\"span\", {\n      className: \"right-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, origin.name)), __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"left-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Last loaction\"), __jsx(\"span\", {\n      className: \"right-ele\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, location.name)))));\n  }) : __jsx(\"div\", {\n    className: \"no-results\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, \"No results Found...\");\n};\n\n_c = ResultSet;\nexport default ResultSet;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultSet\");","map":{"version":3,"sources":["C:/Users/guglani lalit/Documents/react-assignment/components/molecules/ResultSet/ResultSet.js"],"names":["React","connect","ResultSet","list","sortValue","listArr","sortVal","results","sort","ele1","ele2","id","length","map","image","name","status","species","gender","origin","location"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\n\nlet ResultSet = ({ list, sortValue }) => {\n  let listArr = [];\n  const sortVal = sortValue;\n  if (list && list.results) {\n    listArr = [...list.results];\n    if (sortVal === \"Descending\") {\n      // console.log(\"Name deces\", list.results);  \n      listArr = listArr.sort(function (ele1, ele2) { return ele2.id - ele1.id; });\n    }\n    // console.log(\"Name\", list.results);\n  }\n  //console.log(\"sort\", sortValue);\n\n  return listArr.length ? (\n    listArr.map(({ id, image, name, status, species, gender, origin, location }) => (\n      <div className=\"col-md-4 col-3 tile\" key={id}>\n        <div className=\"tile-inner\">\n          <figure>\n            <img src={image} />\n            <div className=\"top-text\">\n              <h4>{name}</h4>\n              <p>id: {id} - created 2 years ago</p>\n            </div>\n          </figure>\n\n          <ul>\n            <li>\n              <span className=\"left-ele\">STATUS</span>\n              <span className=\"right-ele\">{status}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Species</span>\n              <span className=\"right-ele\">{species}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Gender</span>\n              <span className=\"right-ele\">{gender}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Origin</span>\n              <span className=\"right-ele\">{origin.name}</span>\n            </li>\n            <li>\n              <span className=\"left-ele\">Last loaction</span>\n              <span className=\"right-ele\">{location.name}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    ))\n\n  ) : (<div className=\"no-results\">\n    No results Found...\n  </div>);\n}\n\nexport default ResultSet;\n"]},"metadata":{},"sourceType":"module"}